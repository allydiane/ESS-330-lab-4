[
  {
    "objectID": "lab_4.html",
    "href": "lab_4.html",
    "title": "Lab 4",
    "section": "",
    "text": "#PART 1\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggpubr)\nlibrary(lterdatasampler)\nlibrary(car)\n\nLoading required package: carData\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n\nlibrary(visdat)\n\n\n?and_vertebrates\n\nvis_dat(and_vertebrates)\n\n\n\n\n\n\n\n\n\nand_vertebrates |&gt; \n  filter(species == \"Cutthroat trout\") |&gt; \n  count(unittype)\n\n# A tibble: 8 × 2\n  unittype     n\n  &lt;chr&gt;    &lt;int&gt;\n1 C        11419\n2 I           23\n3 IP         105\n4 P         5470\n5 R          420\n6 S            9\n7 SC        2377\n8 &lt;NA&gt;       610\n\n\n\nand_vertebrates |&gt; \n  filter(species == \"Cutthroat trout\") |&gt; \n  drop_na(unittype) |&gt; \n  count(unittype)\n\n# A tibble: 7 × 2\n  unittype     n\n  &lt;chr&gt;    &lt;int&gt;\n1 C        11419\n2 I           23\n3 IP         105\n4 P         5470\n5 R          420\n6 S            9\n7 SC        2377\n\n\n\n# First clean the dataset to create the contingency table from\ntrout_clean &lt;- and_vertebrates  |&gt;  \n  #filter Cutthroat trout\n  filter(species == \"Cutthroat trout\") |&gt; \n  # lets test using just the 3 most abundant unittypes\n  filter(unittype %in% c(\"C\", \"P\", \"SC\")) |&gt; \n  # drop NAs for both unittype and section\n  drop_na(unittype, section)\n\ncont_table &lt;- table(trout_clean$section, trout_clean$unittype)\n\nchisq.test(cont_table)\n\n\n    Pearson's Chi-squared test\n\ndata:  cont_table\nX-squared = 188.68, df = 2, p-value &lt; 2.2e-16\n\n\n\ntrout_clean  |&gt;  \n  count(unittype, section)  |&gt;  \n  ggpubr::ggbarplot(x = 'unittype', y = 'n', \n                    fill = 'section', \n                    palette = c(\"#00AFBB\", \"#E7B800\"),\n                    add = \"mean_se\") \n\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\n\n\n\n\n\n\n\n\n\n\ntrout_clean |&gt; \n  drop_na(weight_g) |&gt; \n  ggpubr::ggviolin(x = \"section\", \n                   y     = \"weight_g\", \n                   add   = \"boxplot\",\n                   color = \"section\",\n                   palette = c(\"#00AFBB\", \"#E7B800\")) \n\n\n\n\n\n\n\n\n\ncc_weight &lt;- trout_clean |&gt; \n  filter(section == \"CC\") |&gt; \n  pull(weight_g)\n\nog_weight &lt;- trout_clean |&gt; \n  filter(section == \"OG\") |&gt; \n  pull(weight_g)\n\nvar.test(cc_weight, og_weight)\n\n\n    F test to compare two variances\n\ndata:  cc_weight and og_weight\nF = 1.2889, num df = 6310, denom df = 5225, p-value &lt; 2.2e-16\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 1.223686 1.357398\nsample estimates:\nratio of variances \n          1.288892 \n\n\n\nggpubr::ggarrange(ggpubr::gghistogram(cc_weight, main = \"Clear Cut\"), \n                  ggpubr::gghistogram(og_weight, main = \"Old Growth\"))\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\nWarning: Removed 4273 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nWarning: Removed 3456 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\nvar.test(log(cc_weight), log(og_weight))\n\n\n    F test to compare two variances\n\ndata:  log(cc_weight) and log(og_weight)\nF = 1.0208, num df = 6310, denom df = 5225, p-value = 0.4374\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.9691443 1.0750427\nsample estimates:\nratio of variances \n          1.020787 \n\n\n\nt.test(log(trout_clean$weight_g) ~ trout_clean$section, var.equal = TRUE)\n\n\n    Two Sample t-test\n\ndata:  log(trout_clean$weight_g) by trout_clean$section\nt = 2.854, df = 11535, p-value = 0.004324\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.02222425 0.11969560\nsample estimates:\nmean in group CC mean in group OG \n        1.457042         1.386082 \n\n\n\nt.test(trout_clean$weight_g ~ trout_clean$section, var.equal = FALSE)\n\n\n    Welch Two Sample t-test\n\ndata:  trout_clean$weight_g by trout_clean$section\nt = 4.5265, df = 11491, p-value = 6.056e-06\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.4642016 1.1733126\nsample estimates:\nmean in group CC mean in group OG \n        8.988807         8.170050 \n\n\n\nsally_clean &lt;- and_vertebrates |&gt; \n  filter(species == \"Coastal giant salamander\") |&gt; \n  drop_na(length_2_mm, weight_g)\n\n\nggarrange(gghistogram(sally_clean$length_2_mm, title = \"Length\"),\ngghistogram(sally_clean$weight_g, title = \"Weight\"))\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\n\n\n\n\n\n\n\n\ns &lt;- sally_clean |&gt; \n  slice_sample(n = 5000) \n\nshapiro.test(s$length_2_mm)\n\n\n    Shapiro-Wilk normality test\n\ndata:  s$length_2_mm\nW = 0.93289, p-value &lt; 2.2e-16\n\n\n\nshapiro.test(s$weight_g)\n\n\n    Shapiro-Wilk normality test\n\ndata:  s$weight_g\nW = 0.56004, p-value &lt; 2.2e-16\n\n\n\nggarrange(\n gghistogram(log(sally_clean$length_2_mm), title = \"Length\"), \n gghistogram(log(sally_clean$weight_g), title = \"Weight\") )\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\n\n\n\n\n\n\n\n\ncor.test(log(sally_clean$length_2_mm), log(sally_clean$weight_g))\n\n\n    Pearson's product-moment correlation\n\ndata:  log(sally_clean$length_2_mm) and log(sally_clean$weight_g)\nt = 402.85, df = 6229, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9804036 0.9822403\nsample estimates:\n      cor \n0.9813443 \n\n\n\nsally_clean |&gt; \n  mutate(log_length = log(length_2_mm), log_weight = log(weight_g)) |&gt; \n  ggscatter(x = 'log_length', \n            y = 'log_weight', \n            alpha = .35,\n            add = \"loess\")\n\n\n\n\n\n\n\n\n\ncor.test(sally_clean$length_2_mm, sally_clean$weight_g, method = \"spearman\")\n\nWarning in cor.test.default(sally_clean$length_2_mm, sally_clean$weight_g, :\nCannot compute exact p-value with ties\n\n\n\n    Spearman's rank correlation rho\n\ndata:  sally_clean$length_2_mm and sally_clean$weight_g\nS = 819296957, p-value &lt; 2.2e-16\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.9796802 \n\n\n#Question 1 Part 1:\n\nand_vertebrates |&gt; \n  filter(species == \"Coastal giant salamander\") |&gt; \n  count(unittype)\n\n# A tibble: 6 × 2\n  unittype     n\n  &lt;chr&gt;    &lt;int&gt;\n1 C         7697\n2 IP          50\n3 P         1943\n4 R           72\n5 S            2\n6 SC        1994\n\n\n\n# First clean the dataset to create the contingency table from\nsalamander &lt;- and_vertebrates  |&gt;  \n  #filter salamander\n  filter(species == \"Coastal giant salamander\") |&gt; \n  # lets test using just the 3 most abundant unittypes\n  filter(unittype %in% c(\"C\", \"P\", \"SC\")) |&gt; \n  # drop NAs for both unittype and section\n  drop_na(unittype, section)\n\ncont_table &lt;- table(salamander$section, salamander$unittype)\n\nchisq.test(cont_table)\n\n\n    Pearson's Chi-squared test\n\ndata:  cont_table\nX-squared = 93.343, df = 2, p-value &lt; 2.2e-16\n\n\n\nsalamander  |&gt;  \n  count(unittype, section)  |&gt;  \n  ggpubr::ggbarplot(x = 'unittype', y = 'n', \n                    fill = 'section', \n                    palette = c(\"#00AFBB\", \"#E7B800\"),\n                    add = \"mean_se\") \n\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\n\n\n\n\n\n\n\n\n\n#Question 1 Part 2:\n\nsalamander |&gt; \n  drop_na(weight_g) |&gt; \n  ggpubr::ggviolin(x = \"section\", \n                   y     = \"weight_g\", \n                   add   = \"boxplot\",\n                   color = \"section\",\n                   palette = c(\"#00AFBB\", \"#E7B800\")) \n\n\n\n\n\n\n\n\n\ncc_weight &lt;- salamander |&gt; \n  filter(section == \"CC\") |&gt; \n  pull(weight_g)\n\nog_weight &lt;- salamander |&gt; \n  filter(section == \"OG\") |&gt; \n  pull(weight_g)\n\nvar.test(cc_weight, og_weight)\n\n\n    F test to compare two variances\n\ndata:  cc_weight and og_weight\nF = 0.8254, num df = 3026, denom df = 3253, p-value = 8.273e-08\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.7696213 0.8853074\nsample estimates:\nratio of variances \n         0.8254031 \n\n\n\nggpubr::ggarrange(ggpubr::gghistogram(cc_weight, main = \"Clear Cut\"), \n                  ggpubr::gghistogram(og_weight, main = \"Old Growth\"))\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\nWarning: Removed 2377 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nWarning: Removed 2976 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\nvar.test(log(cc_weight), log(og_weight))\n\n\n    F test to compare two variances\n\ndata:  log(cc_weight) and log(og_weight)\nF = 0.90887, num df = 3026, denom df = 3253, p-value = 0.007525\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.8474431 0.9748271\nsample estimates:\nratio of variances \n         0.9088654 \n\n\n\nt.test(log(salamander$weight_g) ~ salamander$section, var.equal = TRUE)\n\n\n    Two Sample t-test\n\ndata:  log(salamander$weight_g) by salamander$section\nt = 9.8674, df = 6279, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.1983893 0.2967597\nsample estimates:\nmean in group CC mean in group OG \n        1.828538         1.580963 \n\n\n\nt.test(salamander$weight_g ~ salamander$section, var.equal = FALSE)\n\n\n    Welch Two Sample t-test\n\ndata:  salamander$weight_g by salamander$section\nt = 4.8233, df = 6275.5, p-value = 1.446e-06\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.8720273 2.0662362\nsample estimates:\nmean in group CC mean in group OG \n        9.811695         8.342563 \n\n\n#Question 1 Part 3:\n\nsally_clean &lt;- and_vertebrates |&gt; \n  filter(species == \"Cutthroat trout\") |&gt; \n  drop_na(length_1_mm, weight_g)\n\n\nggarrange(gghistogram(sally_clean$length_1_mm, title = \"Length\"),\ngghistogram(sally_clean$weight_g, title = \"Weight\"))\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\n\n\n\n\n\n\n\n\ns &lt;- sally_clean |&gt; \n  slice_sample(n = 5000) \n\nshapiro.test(s$length_1_mm)\n\n\n    Shapiro-Wilk normality test\n\ndata:  s$length_1_mm\nW = 0.94163, p-value &lt; 2.2e-16\n\n\n\nshapiro.test(s$weight_g)\n\n\n    Shapiro-Wilk normality test\n\ndata:  s$weight_g\nW = 0.79799, p-value &lt; 2.2e-16\n\n\n\nggarrange(\n gghistogram(log(sally_clean$length_1_mm), title = \"Length\"), \n gghistogram(log(sally_clean$weight_g), title = \"Weight\") )\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\n\n\n\n\n\n\n\n\ncor.test(log(sally_clean$length_1_mm), log(sally_clean$weight_g))\n\n\n    Pearson's product-moment correlation\n\ndata:  log(sally_clean$length_1_mm) and log(sally_clean$weight_g)\nt = 915.66, df = 12590, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9923125 0.9928295\nsample estimates:\n      cor \n0.9925755 \n\n\n\nsally_clean |&gt; \n  mutate(log_length = log(length_1_mm), log_weight = log(weight_g)) |&gt; \n  ggscatter(x = 'log_length', \n            y = 'log_weight', \n            alpha = .35,\n            add = \"loess\")\n\n\n\n\n\n\n\n\n\ncor.test(sally_clean$length_2_mm, sally_clean$weight_g, method = \"spearman\")\n\nWarning in cor.test.default(sally_clean$length_2_mm, sally_clean$weight_g, :\nCannot compute exact p-value with ties\n\n\n\n    Spearman's rank correlation rho\n\ndata:  sally_clean$length_2_mm and sally_clean$weight_g\nS = 747808, p-value &lt; 2.2e-16\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.9960795 \n\n\n#PART 2\n\n??car\ndata(\"pie_crab\")\nglimpse(pie_crab)\n\nRows: 392\nColumns: 9\n$ date          &lt;date&gt; 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-24, 2016-07…\n$ latitude      &lt;dbl&gt; 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, …\n$ site          &lt;chr&gt; \"GTM\", \"GTM\", \"GTM\", \"GTM\", \"GTM\", \"GTM\", \"GTM\", \"GTM\", …\n$ size          &lt;dbl&gt; 12.43, 14.18, 14.52, 12.94, 12.45, 12.99, 10.32, 11.19, …\n$ air_temp      &lt;dbl&gt; 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, …\n$ air_temp_sd   &lt;dbl&gt; 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, …\n$ water_temp    &lt;dbl&gt; 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, …\n$ water_temp_sd &lt;dbl&gt; 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, …\n$ name          &lt;chr&gt; \"Guana Tolomoto Matanzas NERR\", \"Guana Tolomoto Matanzas…\n\nvis_dat(pie_crab)\n\n\n\n\n\n\n\n\n\n?pie_crab\ncount(pie_crab, site)\n\n# A tibble: 13 × 2\n   site      n\n   &lt;chr&gt; &lt;int&gt;\n 1 BC       37\n 2 CC       27\n 3 CT       33\n 4 DB       30\n 5 GTM      28\n 6 JC       30\n 7 NB       29\n 8 NIB      30\n 9 PIE      28\n10 RC       25\n11 SI       30\n12 VCR      30\n13 ZI       35\n\n\n\nsummary(pie_crab)\n\n      date               latitude         site                size      \n Min.   :2016-07-24   Min.   :30.00   Length:392         Min.   : 6.64  \n 1st Qu.:2016-07-28   1st Qu.:34.00   Class :character   1st Qu.:12.02  \n Median :2016-08-01   Median :39.10   Mode  :character   Median :14.44  \n Mean   :2016-08-02   Mean   :37.69                      Mean   :14.66  \n 3rd Qu.:2016-08-09   3rd Qu.:41.60                      3rd Qu.:17.34  \n Max.   :2016-08-13   Max.   :42.70                      Max.   :23.43  \n    air_temp      air_temp_sd      water_temp    water_temp_sd  \n Min.   :10.29   Min.   :6.391   Min.   :13.98   Min.   :4.838  \n 1st Qu.:12.05   1st Qu.:8.110   1st Qu.:14.33   1st Qu.:6.567  \n Median :13.93   Median :8.410   Median :17.50   Median :6.998  \n Mean   :15.20   Mean   :8.654   Mean   :17.65   Mean   :7.252  \n 3rd Qu.:18.63   3rd Qu.:9.483   3rd Qu.:20.54   3rd Qu.:7.865  \n Max.   :21.79   Max.   :9.965   Max.   :24.50   Max.   :9.121  \n     name          \n Length:392        \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\n\npie_crab |&gt; \n  ggboxplot(x = 'site', y = 'size', col = 'site') +\n  geom_jitter(size =.25) + \n  theme(legend.postition = \"none\")\n\nWarning in plot_theme(plot): The `legend.postition` theme element is not\ndefined in the element hierarchy.\n\n\n\n\n\n\n\n\n\n\nnorms &lt;- pie_crab |&gt; \n  nest(data = -site) |&gt;\n  mutate(Shapiro = map(data, ~ shapiro.test(.x$size)),\n         n = map_dbl(data, nrow),\n         glance_shapiro = map(Shapiro, broom::glance)) |&gt;\n  unnest(glance_shapiro)\n\nflextable::flextable(dplyr::select(norms, site, n, statistic, p.value)) |&gt;\n  flextable::set_caption(\"Shapiro-Wilk normality test for size at each site\")\n\nsitenstatisticp.valueGTM280.90078140.0119337484SI300.97053520.5539208550NIB300.97282970.6191340731ZI350.97445830.5765589900RC250.93150620.0941588802VCR300.94446820.1200262239DB300.95762710.2690631942JC300.96347540.3788327942CT330.92773650.0301785639NB290.96753670.4949587443CC270.93546590.0941803007BC370.88857210.0014402753PIE280.84893990.0008899392\n\n\n\n(res_aov &lt;- aov(size ~ site, data = pie_crab))\n\nCall:\n   aov(formula = size ~ site, data = pie_crab)\n\nTerms:\n                    site Residuals\nSum of Squares  2172.376  2626.421\nDeg. of Freedom       12       379\n\nResidual standard error: 2.632465\nEstimated effects may be unbalanced\n\n\n\ngghistogram(res_aov$residuals)\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\n\n\n\n\n\n\n\n\nshapiro.test(res_aov$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  res_aov$residuals\nW = 0.99708, p-value = 0.7122\n\n\n\nleveneTest(size ~ site, data = pie_crab)\n\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value    Pr(&gt;F)    \ngroup  12  9.2268 1.151e-15 ***\n      379                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n#perform Welch's ANOVA\noneway.test(size ~ site, data = pie_crab, var.equal = FALSE)\n\n\n    One-way analysis of means (not assuming equal variances)\n\ndata:  size and site\nF = 39.108, num df = 12.00, denom df = 145.79, p-value &lt; 2.2e-16\n\n\n\n# Filter a subset of the sites\npie_sites &lt;- pie_crab |&gt; \n  filter(site %in% c(\"GTM\", \"DB\", \"PIE\"))\n\n# Check for equal variance\nleveneTest(size ~ site, data = pie_sites)\n\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(&gt;F)\ngroup  2   0.548 0.5802\n      83               \n\n\n\n# Note that the variances are equal (p = 0.5802), so we can proceed with the ANOVA\n\n# ANOVA for the data subset\npie_anova &lt;- aov(size ~ site, data = pie_sites)\n\n# View the ANOVA results \nsummary(pie_anova)\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)    \nsite         2  521.5  260.75   60.02 &lt;2e-16 ***\nResiduals   83  360.6    4.34                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nTukeyHSD(pie_anova)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = size ~ site, data = pie_sites)\n\n$site\n             diff       lwr       upr   p adj\nGTM-DB  -3.200786 -4.507850 -1.893722 3.0e-07\nPIE-DB   2.899929  1.592865  4.206992 2.9e-06\nPIE-GTM  6.100714  4.771306  7.430123 0.0e+00\n\n\n\npie_lm &lt;- lm(size ~ latitude, data = pie_crab)\n\n#view the results of the linear model\nsummary(pie_lm)\n\n\nCall:\nlm(formula = size ~ latitude, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.8376 -1.8797  0.1144  1.9484  6.9280 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -3.62442    1.27405  -2.845  0.00468 ** \nlatitude     0.48512    0.03359  14.441  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.832 on 390 degrees of freedom\nMultiple R-squared:  0.3484,    Adjusted R-squared:  0.3467 \nF-statistic: 208.5 on 1 and 390 DF,  p-value: &lt; 2.2e-16\n\n\n\npie_crab |&gt; \n  ggscatter(x = 'latitude', y = 'size', \n            alpha = .35, \n            add = \"reg.line\")\n\n\n\n\n\n\n\n\n\nnew_lat &lt;- data.frame(latitude = c(32, 36, 38))\n\nbroom::augment(pie_lm, newdata = new_lat)\n\n# A tibble: 3 × 2\n  latitude .fitted\n     &lt;dbl&gt;   &lt;dbl&gt;\n1       32    11.9\n2       36    13.8\n3       38    14.8\n\n\n\npie_mlm &lt;- lm(size ~ latitude + air_temp + water_temp, data = pie_crab)\n\nsummary(pie_mlm)\n\n\nCall:\nlm(formula = size ~ latitude + air_temp + water_temp, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.7099 -1.7195 -0.0602  1.7823  7.7271 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  77.7460    17.3477   4.482 9.76e-06 ***\nlatitude     -1.0587     0.3174  -3.336 0.000933 ***\nair_temp     -2.4041     0.3844  -6.255 1.05e-09 ***\nwater_temp    0.7563     0.1465   5.162 3.92e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.677 on 388 degrees of freedom\nMultiple R-squared:  0.4206,    Adjusted R-squared:  0.4161 \nF-statistic:  93.9 on 3 and 388 DF,  p-value: &lt; 2.2e-16\n\n\n\npie_crab |&gt; \n  dplyr::select(latitude, air_temp, water_temp) |&gt; \n  cor()\n\n             latitude   air_temp water_temp\nlatitude    1.0000000 -0.9949715 -0.9571738\nair_temp   -0.9949715  1.0000000  0.9632287\nwater_temp -0.9571738  0.9632287  1.0000000\n\n\n#Question 2 Part 1:\n\npie_crab$site &lt;- factor(pie_crab$site, \n                         levels = unique(pie_crab$site[order(pie_crab$latitude)]))\n\npie_crab |&gt; \n  ggboxplot(x = 'site', y = 'size', col = 'site') +\n  geom_jitter(size =.25) + \n  theme(legend.postition = \"none\")\n\nWarning in plot_theme(plot): The `legend.postition` theme element is not\ndefined in the element hierarchy.\n\n\n\n\n\n\n\n\n\n#The findings of the ANOVA test are shown above in this boxplot. Here, they are arranged by latitude, and we can see a linear relationship in size versus latitude.\n#Question 2 Part 2:\n\npie_lm &lt;- lm(size ~ water_temp_sd, data = pie_crab)\n\n\nsummary(pie_lm)\n\n\nCall:\nlm(formula = size ~ water_temp_sd, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.9428 -2.6948 -0.2145  2.6573  8.8070 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   13.93728    1.15338  12.084   &lt;2e-16 ***\nwater_temp_sd  0.09938    0.15716   0.632    0.528    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.506 on 390 degrees of freedom\nMultiple R-squared:  0.001024,  Adjusted R-squared:  -0.001537 \nF-statistic: 0.3999 on 1 and 390 DF,  p-value: 0.5275\n\n\n\npie_crab |&gt; \n  ggscatter(x = 'water_temp_sd', y = 'size', \n            alpha = .35, \n            add = \"reg.line\")\n\n\n\n\n\n\n\n\n#This actually shows that there is not much of a relationship between water temperature and caraspace width of crabs.\n#Question 2 Part 3:\n\npie_mlm &lt;- lm(size ~ latitude + air_temp_sd + water_temp_sd, data = pie_crab)\n\nsummary(pie_mlm)\n\n\nCall:\nlm(formula = size ~ latitude + air_temp_sd + water_temp_sd, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.7515 -1.8897  0.0506  1.9301  6.6746 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -3.96880    1.54818  -2.564   0.0107 *  \nlatitude       0.55940    0.06413   8.723   &lt;2e-16 ***\nair_temp_sd   -0.41713    0.30559  -1.365   0.1730    \nwater_temp_sd  0.15927    0.16174   0.985   0.3254    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.832 on 388 degrees of freedom\nMultiple R-squared:  0.3516,    Adjusted R-squared:  0.3466 \nF-statistic: 70.13 on 3 and 388 DF,  p-value: &lt; 2.2e-16\n\n\n\npie_crab |&gt; \n  dplyr::select(size, latitude, air_temp_sd, water_temp_sd) |&gt; \n  cor()\n\n                    size   latitude air_temp_sd water_temp_sd\nsize          1.00000000 0.59027170   0.4442654    0.03200579\nlatitude      0.59027170 1.00000000   0.7932130    0.04188273\nair_temp_sd   0.44426543 0.79321301   1.0000000    0.40970338\nwater_temp_sd 0.03200579 0.04188273   0.4097034    1.00000000\n\n\n#There is a moderate correlation between latitude and caraspace width of 59%, and a slightly less moderate but still correlated relationshop between air temperature and caraspace width, with an r-squared value of 44%."
  }
]