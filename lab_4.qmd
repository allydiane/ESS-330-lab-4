---
title: "Lab 4"
subtitle: 'ESS 330'
author:
  - name: Ally Lewis
    email: "adlewis1@colostate.edu"
format:
  html:
    self-contained: true
---

#PART 1


```{r}
library(tidyverse)
library(ggpubr)
library(lterdatasampler)
library(car)
library(visdat)
```

```{r}
?and_vertebrates

vis_dat(and_vertebrates)
```

```{r}
and_vertebrates |> 
  filter(species == "Cutthroat trout") |> 
  count(unittype)
```

```{r}
and_vertebrates |> 
  filter(species == "Cutthroat trout") |> 
  drop_na(unittype) |> 
  count(unittype)
```

```{r}
# First clean the dataset to create the contingency table from
trout_clean <- and_vertebrates  |>  
  #filter Cutthroat trout
  filter(species == "Cutthroat trout") |> 
  # lets test using just the 3 most abundant unittypes
  filter(unittype %in% c("C", "P", "SC")) |> 
  # drop NAs for both unittype and section
  drop_na(unittype, section)

cont_table <- table(trout_clean$section, trout_clean$unittype)

chisq.test(cont_table)
```

```{r}
trout_clean  |>  
  count(unittype, section)  |>  
  ggpubr::ggbarplot(x = 'unittype', y = 'n', 
                    fill = 'section', 
                    palette = c("#00AFBB", "#E7B800"),
                    add = "mean_se") 
```

```{r}
trout_clean |> 
  drop_na(weight_g) |> 
  ggpubr::ggviolin(x = "section", 
                   y     = "weight_g", 
                   add   = "boxplot",
                   color = "section",
                   palette = c("#00AFBB", "#E7B800")) 
```

```{r}
cc_weight <- trout_clean |> 
  filter(section == "CC") |> 
  pull(weight_g)

og_weight <- trout_clean |> 
  filter(section == "OG") |> 
  pull(weight_g)

var.test(cc_weight, og_weight)
```

```{r}
ggpubr::ggarrange(ggpubr::gghistogram(cc_weight, main = "Clear Cut"), 
                  ggpubr::gghistogram(og_weight, main = "Old Growth"))
```

```{r}
var.test(log(cc_weight), log(og_weight))
```

```{r}
t.test(log(trout_clean$weight_g) ~ trout_clean$section, var.equal = TRUE)
```

```{r}
t.test(trout_clean$weight_g ~ trout_clean$section, var.equal = FALSE)
```

```{r}
sally_clean <- and_vertebrates |> 
  filter(species == "Coastal giant salamander") |> 
  drop_na(length_2_mm, weight_g)
```

```{r}
ggarrange(gghistogram(sally_clean$length_2_mm, title = "Length"),
gghistogram(sally_clean$weight_g, title = "Weight"))
```

```{r}
s <- sally_clean |> 
  slice_sample(n = 5000) 

shapiro.test(s$length_2_mm)
```

```{r}
shapiro.test(s$weight_g)
```

```{r}
ggarrange(
 gghistogram(log(sally_clean$length_2_mm), title = "Length"), 
 gghistogram(log(sally_clean$weight_g), title = "Weight") )
```

```{r}
cor.test(log(sally_clean$length_2_mm), log(sally_clean$weight_g))
```

```{r}
sally_clean |> 
  mutate(log_length = log(length_2_mm), log_weight = log(weight_g)) |> 
  ggscatter(x = 'log_length', 
            y = 'log_weight', 
            alpha = .35,
            add = "loess")
```

```{r}
cor.test(sally_clean$length_2_mm, sally_clean$weight_g, method = "spearman")
```

#Question 1 Part 1: 
```{r}
and_vertebrates |> 
  filter(species == "Coastal giant salamander") |> 
  count(unittype)
```

```{r}
# First clean the dataset to create the contingency table from
salamander <- and_vertebrates  |>  
  #filter salamander
  filter(species == "Coastal giant salamander") |> 
  # lets test using just the 3 most abundant unittypes
  filter(unittype %in% c("C", "P", "SC")) |> 
  # drop NAs for both unittype and section
  drop_na(unittype, section)

cont_table <- table(salamander$section, salamander$unittype)

chisq.test(cont_table)
```

```{r}
salamander  |>  
  count(unittype, section)  |>  
  ggpubr::ggbarplot(x = 'unittype', y = 'n', 
                    fill = 'section', 
                    palette = c("#00AFBB", "#E7B800"),
                    add = "mean_se") 
```

#Question 1 Part 2: 
```{r}
salamander |> 
  drop_na(weight_g) |> 
  ggpubr::ggviolin(x = "section", 
                   y     = "weight_g", 
                   add   = "boxplot",
                   color = "section",
                   palette = c("#00AFBB", "#E7B800")) 
```

```{r}
cc_weight <- salamander |> 
  filter(section == "CC") |> 
  pull(weight_g)

og_weight <- salamander |> 
  filter(section == "OG") |> 
  pull(weight_g)

var.test(cc_weight, og_weight)
```

```{r}
ggpubr::ggarrange(ggpubr::gghistogram(cc_weight, main = "Clear Cut"), 
                  ggpubr::gghistogram(og_weight, main = "Old Growth"))
```

```{r}
var.test(log(cc_weight), log(og_weight))
```

```{r}
t.test(log(salamander$weight_g) ~ salamander$section, var.equal = TRUE)
```

```{r}
t.test(salamander$weight_g ~ salamander$section, var.equal = FALSE)
```

#Question 1 Part 3: 
```{r}
sally_clean <- and_vertebrates |> 
  filter(species == "Cutthroat trout") |> 
  drop_na(length_1_mm, weight_g)
```

```{r}
ggarrange(gghistogram(sally_clean$length_1_mm, title = "Length"),
gghistogram(sally_clean$weight_g, title = "Weight"))
```

```{r}
s <- sally_clean |> 
  slice_sample(n = 5000) 

shapiro.test(s$length_1_mm)
```

```{r}
shapiro.test(s$weight_g)
```

```{r}
ggarrange(
 gghistogram(log(sally_clean$length_1_mm), title = "Length"), 
 gghistogram(log(sally_clean$weight_g), title = "Weight") )
```

```{r}
cor.test(log(sally_clean$length_1_mm), log(sally_clean$weight_g))
```

```{r}
sally_clean |> 
  mutate(log_length = log(length_1_mm), log_weight = log(weight_g)) |> 
  ggscatter(x = 'log_length', 
            y = 'log_weight', 
            alpha = .35,
            add = "loess")
```

```{r}
cor.test(sally_clean$length_2_mm, sally_clean$weight_g, method = "spearman")
```

#PART 2

```{r}
??car
data("pie_crab")
glimpse(pie_crab)
vis_dat(pie_crab)
```

```{r}
?pie_crab
count(pie_crab, site)
```

```{r}
summary(pie_crab)
```

```{r}
pie_crab |> 
  ggboxplot(x = 'site', y = 'size', col = 'site') +
  geom_jitter(size =.25) + 
  theme(legend.postition = "none")
```

```{r}
norms <- pie_crab |> 
  nest(data = -site) |>
  mutate(Shapiro = map(data, ~ shapiro.test(.x$size)),
         n = map_dbl(data, nrow),
         glance_shapiro = map(Shapiro, broom::glance)) |>
  unnest(glance_shapiro)

flextable::flextable(dplyr::select(norms, site, n, statistic, p.value)) |>
  flextable::set_caption("Shapiro-Wilk normality test for size at each site")
```

```{r}
(res_aov <- aov(size ~ site, data = pie_crab))
```

```{r}
gghistogram(res_aov$residuals)
```

```{r}
shapiro.test(res_aov$residuals)
```

```{r}
leveneTest(size ~ site, data = pie_crab)
```

```{r}
#perform Welch's ANOVA
oneway.test(size ~ site, data = pie_crab, var.equal = FALSE)
```

```{r}
# Filter a subset of the sites
pie_sites <- pie_crab |> 
  filter(site %in% c("GTM", "DB", "PIE"))

# Check for equal variance
leveneTest(size ~ site, data = pie_sites)
```

```{r}
# Note that the variances are equal (p = 0.5802), so we can proceed with the ANOVA

# ANOVA for the data subset
pie_anova <- aov(size ~ site, data = pie_sites)

# View the ANOVA results 
summary(pie_anova)
```

```{r}
TukeyHSD(pie_anova)
```

```{r}
pie_lm <- lm(size ~ latitude, data = pie_crab)

#view the results of the linear model
summary(pie_lm)
```

```{r}
pie_crab |> 
  ggscatter(x = 'latitude', y = 'size', 
            alpha = .35, 
            add = "reg.line")
```

```{r}
new_lat <- data.frame(latitude = c(32, 36, 38))

broom::augment(pie_lm, newdata = new_lat)
```

```{r}
pie_mlm <- lm(size ~ latitude + air_temp + water_temp, data = pie_crab)

summary(pie_mlm)
```

```{r}
pie_crab |> 
  dplyr::select(latitude, air_temp, water_temp) |> 
  cor()
```

#Question 2 Part 1: 
```{r}
pie_crab$site <- factor(pie_crab$site, 
                         levels = unique(pie_crab$site[order(pie_crab$latitude)]))

pie_crab |> 
  ggboxplot(x = 'site', y = 'size', col = 'site') +
  geom_jitter(size =.25) + 
  theme(legend.postition = "none")
```
#The findings of the ANOVA test are shown above in this boxplot. Here, they are arranged by latitude, and we can see a linear relationship in size versus latitude.

#Question 2 Part 2: 
```{r}
pie_lm <- lm(size ~ water_temp_sd, data = pie_crab)


summary(pie_lm)
```

```{r}
pie_crab |> 
  ggscatter(x = 'water_temp_sd', y = 'size', 
            alpha = .35, 
            add = "reg.line")
```
#This actually shows that there is not much of a relationship between water temperature and caraspace width of crabs. 

#Question 2 Part 3: 
```{r}
pie_mlm <- lm(size ~ latitude + air_temp_sd + water_temp_sd, data = pie_crab)

summary(pie_mlm)
```

```{r}
pie_crab |> 
  dplyr::select(size, latitude, air_temp_sd, water_temp_sd) |> 
  cor()
```
#There is a moderate correlation between latitude and caraspace width of 59%, and a slightly less moderate but still correlated relationshop between air temperature and caraspace width, with an r-squared value of 44%. 
